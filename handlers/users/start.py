import asyncpg
from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart, Text, Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from keyboards.default.keyboard import lang_button, passport_choice
from loader import dp, db
from middlewares import _, __


@dp.message_handler(CommandStart())
async def bot_start(message: types.Message):
    try:
        await db.add_user(
            full_name=message.from_user.full_name,
            username=message.from_user.username,
            telegram_id=message.from_user.id
        )
    except asyncpg.exceptions.UniqueViolationError:
        await db.select_user(telegram_id=message.from_user.id)
    await db.message(message.from_user.full_name, message.from_user.id, message.text, message.date)
    msg = await message.answer(__(f"–í—ñ—Ç–∞—é, {message.from_user.full_name}!"))
    msg1 = await message.answer(_("–û–±–µ—Ä—ñ—Ç—å –∑—Ä—É—á–Ω—É –¥–ª—è –≤–∞—Å –º–æ–≤—É!"), reply_markup=lang_button)
    await db.message("BOT", 10001, msg, message.date.time())
    await db.message("BOT", 10001, msg1, message.date.time())


@dp.message_handler(Text(["UA", "RU", "EN"]))
async def tel_info(message: types.Message):
    await db.set_lang(message.text.lower(), message.from_user.id)
    await db.message(message.from_user.full_name, message.from_user.id, message.text, message.date)
    msg = await message.answer(_("–¢–µ–ø–µ—Ä –±—É–¥—å-–ª–∞—Å–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∑–≤`—è–∑–∫—É –∑ –≤–∞–º–∏"),
                         reply_markup=ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
                             [
                                 KeyboardButton(text="üì±",
                                                request_contact=True)
                             ]
                         ], one_time_keyboard=True))
    await db.message("BOT", 10001, msg, message.date.time())


@dp.message_handler(content_types=types.ContentType.CONTACT)
async def about_bot(message: types.Message):
    await db.update_phone_number(message.contact.phone_number, message.from_user.id)
    await db.message(message.from_user.full_name, message.from_user.id, message.text, message.date)
    msg = await message.answer(_("@chipkarta_bot - —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è —á—ñ–ø-–∫–∞—Ä—Ç–∏ –≤–æ–¥—ñ—è.\n"
                                 "–í–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ—Å–ª—É–≥–∏ - 250 –≥—Ä–Ω.\n"
                                 "–í–∞—Ä—Ç—ñ—Å—Ç—å –¥–µ—Ä–∂. –º–∏—Ç–∞ - 1970 –≥—Ä–Ω.\n"
                                 "–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è - –≤—ñ–¥ 7 –¥–Ω—ñ–≤.\n"
                                 "–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó —á—ñ–ø-–∫–∞—Ä—Ç–∏ - 5 —Ä–æ–∫—ñ–≤.\n"
                                 "–û–ø–ª–∞—Ç–∞ –ø—ñ—Å–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤.\n"
                                 "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ü–µ–π —Å–µ—Ä–≤—ñ—Å –í–∏ –¥–∞—î—Ç–µ –∑–≥–æ–¥—É –Ω–∞ –æ–±—Ä–æ–±–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö."),
                               reply_markup=passport_choice)
    await db.message("BOT", 10001, msg, message.date.time())


@dp.message_handler(Text(__("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")))
async def main_menu(message: types.Message):
    await db.message(message.from_user.full_name, message.from_user.id, message.text, message.date)
    msg = await message.answer(_("@chipkarta_bot - —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è —á—ñ–ø-–∫–∞—Ä—Ç–∏ –≤–æ–¥—ñ—è.\n"
                                 "–í–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ—Å–ª—É–≥–∏ - 250 –≥—Ä–Ω.\n"
                                 "–í–∞—Ä—Ç—ñ—Å—Ç—å –¥–µ—Ä–∂. –º–∏—Ç–∞ - 1970 –≥—Ä–Ω.\n"
                                 "–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è - –≤—ñ–¥ 7 –¥–Ω—ñ–≤.\n"
                                 "–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó —á—ñ–ø-–∫–∞—Ä—Ç–∏ - 5 —Ä–æ–∫—ñ–≤.\n"
                                 "–û–ø–ª–∞—Ç–∞ –ø—ñ—Å–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤.\n"
                                 "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Ü–µ–π —Å–µ—Ä–≤—ñ—Å –í–∏ –¥–∞—î—Ç–µ –∑–≥–æ–¥—É –Ω–∞ –æ–±—Ä–æ–±–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö."),
                               reply_markup=passport_choice)
    await db.message("BOT", 1001, msg, message.date.time())
